-- phpMyAdmin SQL Dump
-- version 4.8.1
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1
-- Время создания: Ноя 08 2022 г., 04:36
-- Версия сервера: 10.1.33-MariaDB
-- Версия PHP: 7.2.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `mybase1`
--

-- --------------------------------------------------------

--
-- Структура таблицы `categories`
--

CREATE TABLE `categories` (
  `id` int(10) NOT NULL,
  `category_name` varchar(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `categories`
--

INSERT INTO `categories` (`id`, `category_name`) VALUES
(1, 'Frontend'),
(2, 'Backend'),
(3, 'Fullsteck');

-- --------------------------------------------------------

--
-- Структура таблицы `posts`
--

CREATE TABLE `posts` (
  `id` int(10) NOT NULL,
  `title` varchar(255) NOT NULL,
  `text` text NOT NULL,
  `category_id` int(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `posts`
--

INSERT INTO `posts` (`id`, `title`, `text`, `category_id`) VALUES
(16, 'Функции в PHP', '<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Функция</span></span></strong><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"> &ndash; это часть программы, обозначенная определенным именем, выполняющая определенную задачу и необязательно возвращающая результат.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Основная задача создания функций </span></span><span style=\"font-size:12.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&ndash;</span></span><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"> это организация программы таким образом, чтобы правильно работающий код можно было многократно использовать, не изменяя и не создавая снова. То есть та часть программы, которая может понадобиться снова, записывается в виде функции и по мере необходимости просто вызывается, через указание ее имени. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Существуют два типа функций: <em>встроенные</em> и <em>пользовательские</em>. </span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Встроенные функции </span></span><span style=\"font-size:12.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&ndash;</span></span><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"> это функции, которые за нас уже написали создатели языка программирования, и мы можем просто их использовать.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">PHP имеет огромное количество встроенных функций различного назначения. Вот перечень наиболее часто используемых групп функций:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">1. Для работы с переменными.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">2. Даты/времени.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">3. Для работы со строками.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">4. Для работы с массивами.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">5. Математические.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">6. Для работы с файлами.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">7. Обнаружения орфографических ошибок.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Чтобы воспользоваться функцией, ее нужно вызвать по имени. Синтаксис вызова функции:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><em><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">имя_функции</span></span></em><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">(); </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Здесь вызывается функция не требует параметров. Кроме того, любое значение, которое может возвратить эта функция, игнорируется. Некоторые функции вызываются именно так. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Функция <em>phpinfo()</em> часто полезна при тестировании, поскольку она отображает установленную версию РНР, информацию о РНР, сведения о веб-сервере и значения разнообразных переменных РНР и сервера (рис.1).</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><img alt=\"\" src=\"/kursProject%202/upload/images/%D1%81%D1%85%D0%B5%D0%BC%D0%B0.jpg\" style=\"height:888px; width:938px\" /></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Перед использованием встроенных функций в программе с ними приходится знакомиться по справочникам. При этом надо обратить внимание на то, возвращает ли она значение или не возвращает. Потому что от этого зависит схема использования функции в программе (в виде отдельного оператора или в составе выражения или оператора).</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">sort($arr); <span style=\"color:darkgreen\">// функция sort() не возвращает значения </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">$arr=array_unique ($arr); <span style=\"color:darkgreen\">//</span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">функция</span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\"> array_unique (); </span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">возвращает</span></span></span> <span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">значения</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Далее мы рассмотрим несколько примеров функций. При этом будем ссылаться на предыдущее изложение и приведем дополнительные примеры использования рассматриваемых функций.</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">1. Функции для работы с переменными</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Библиотека функций для работы с переменными РНР позволяет различными способами манипулировать переменными и проверять их.</span></span></p>\r\n\r\n<p><strong><em><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Проверка и установка типов переменных </span></span></em></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Большинство этих функций связано с проверкой типов. Двумя наиболее общими функциями являются <em>gettype()</em> и <em>settype()</em>. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">При вызове функции gettype() ей необходимо передать переменную. Функция определяет тип переменной и возвращает строку, содержащую имя типа, или &quot;unknown type&quot;, если тип переменной не является одним из стандартных типов: integer, double, string, array или object. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">При вызове функции settype() ей необходимо передать переменную, тип которой требуется изменить, и строку, содержащую новый тип переменной из приведенного ранее списка. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Вот пример применения этих функций: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">&lt;?php </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">$</span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">а</span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"> = 56; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo gettype($</span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">а</span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">).&quot;&lt;br&gt;&quot;; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">settype($a, &quot;double&quot;); </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo gettype($a).&quot;&lt;br&gt;&quot;; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">?&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Перед первым вызовом функции gettype() переменная $а имеет тип integer. После вызова функции settype() ее тип изменится на double.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><strong><em><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Проверка состояния переменных </span></span></em></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">РНР имеет несколько функций, предназначенных для проверки состояния переменных. Первая из них &ndash; <em>isset()</em>. Эта функция принимает в качестве аргумента имя переменной и возвращает значение true, если переменная существует, и false в противном случае. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Переменную можно удалить, используя функцию <em>unset()</em>. Эта функция удаляет переменную и возвращает значение true. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Пример</span></span><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">&lt;?php </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">$a = 5; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">if (isset($a)) </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">{ </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; unset($a);</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">} echo $a; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">?&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Сначала успешно прошла проверка существования переменной, потом ее удалили, после чего удивляться сообщению о том, что переменная не определена, не приходится.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Функция <em>empty()</em> проверяет существование переменной и наличие у нее непустого, ненулевого значения и возвращает, соответственно, значение true или false. Следовательно, проверка переменной с помощью этой функции приведет в следующем примере к выводу на экран сообщения &quot;Переменная пуста&quot;: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">&lt;?php </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">$a = &quot;&quot;;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">if (empty($a)) </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">{ </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo &quot;Переменная пуста&quot;; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">} </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">else </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">{ echo &quot;a: &quot;.$a; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">} </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">?&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">2. Функции для работы с датой и временем</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Функция <em>date() </em>возвращает отформатированную строку, содержащую текущую дату: </span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo date(&quot;F j, Y, g:i a&quot;); </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Описание функции date() выглядит так: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Liberation Sans&quot;,&quot;sans-serif&quot;\">string date(format, timestamp) </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Обязательный параметр format задает формат вывода даты и может содержать как простой текст, так и ряд специальных символов. Необязательный параметр timestamp задает момент времени, который будет использоваться при форматировании. Если аргумент timestamp не задан, то функция возвращает текущее системное время. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">В UNIX-системах время записывается в виде количества секунд (timestamp &ndash; метка времени), прошедших с полуночи 1 января 1970 г. по Гринвичу &ndash; эпохи UNIX (The Unix Epoch). PHP использует такое представление, и вы можете узнать текущее время с помощью функции <em>time()</em>, которая возвращает текущую метку времени: </span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo time();</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Исполнение следующего кода: </span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo date(&quot;Y-m-d&quot;); </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">приведет сегодня к такому выводу на экран: 2022-06-30. Русское слово, добавленное в строку формата: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo date(&quot;Сегодня Y-m-d&quot;); <span style=\"color:darkgreen\">// Выведется на экран: Сегодня 2022-06-30</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">3. Функции для работы со строками</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">С помощью этих функций можно, например, обрезать строку, дописывать строку, заменить часть строки и много другое. Это очень полезный инструмент при разработке скриптов.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Функция <em>substr</em> используется для получения части строки. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Синтаксис</span></span><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">string substr ($string, $start ,$length)</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Первый параметр $string &ndash; строка из которой нужно получить подстроку начиная с позиции $start и длинной в $length. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Пример</span></span><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">&lt;?php </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo substr(&quot;Hello world&quot;, 6, 5); </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">?&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Отображение в браузере:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">world</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Последний параметр $length необязательный.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">&lt;?php </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">echo substr(&quot;Hello world !!!&quot;, 6); </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\">?&gt; </span></span></p>\r\n', 2);
INSERT INTO `posts` (`id`, `title`, `text`, `category_id`) VALUES
(26, 'Пользовательские функции', '<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">В программах часто возникает необходимость повторять одни и те же вычисления или действия при различных значениях параметров. Для уменьшения размера программы эти вычисления выделяются в отдельную подпрограмму. В основной программе при необходимости осуществляются обращение к подпрограмме. В PHP подпрограммы реализуются в виде функций.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Все функции имеют глобальную область видимости, это значит, что они могут быть вызваны в любом месте программы.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><u><span style=\"font-size:14.0pt\"><span style=\"color:black\">Синтаксис объявления функции следующий:</span></span></u></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">function <em>имя_функции</em> ([параметр1, параметр2, ]) </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">{ </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><em><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">тело функции </span></span></span></em></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Параметр1, параметр2 &ndash; это формальные параметры, которые при обращении к функции заменяются фактическими параметрами (их также называют <em>аргументами</em>). В качестве параметров передаются переменные.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">В заголовке функции параметры могут отсутствовать. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Тело функции &ndash; это любой верный код PHP. Тело функции может завершаться служебным словом <em>return</em>, если она должна вернуть вычисленное значение.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function <em>имя_функции</em> ([параметр1, параметр2]) </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">{ </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><em><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">операторы</span></span></span></em><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">return <em>значение;</em></span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><u><span style=\"font-size:14.0pt\"><span style=\"color:black\">Синтаксис вызова функций следующий:</span></span></u></p>\r\n\r\n<p style=\"text-align:justify\"><em><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">имя_функции</span></span></span></em><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">(аргумент1, аргумент2);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Применение функции без аргументов</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Пример:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&lt;?php</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function hi(){</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo (&quot;Привет из мира функций!&quot;);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">hi(); </span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// Вызов функции без указания аргументов</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">?&gt;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Результат:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Привет из мира функций!</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Применение функции с аргументами</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Пример:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&lt;?php</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function hi($name){</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo &quot;</span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">Привет</span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">, $name!&lt;br/&gt;&quot;;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// вызов функции вариант 1</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">hi(&quot;Вася&quot;);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// вызов функции вариант 2</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">$n=&quot;Вася&quot;;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">hi($n);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// вызов функции вариант 3</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">$myFunc=&quot;hi&quot;; </span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// здесь круглые скобки не нужны!</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">$myFunc(&quot;Вася&quot;);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">?&gt;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Результат:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Привет, Вася!</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Привет, Вася!</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Привет, Вася!</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Определение значений по умолчанию для аргументов функции</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">В php в пользовательских функциях можно задавать значения по умолчанию для аргументов. Т.е. если в программе не передать значение аргумента, то аргумент примет то значение, которое установлено по умолчанию.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&lt;?php</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function hi($name=&quot;Вася&quot;) </span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">//значение по умолчанию</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">{</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo &quot;Привет, &quot;.$name!&lt;br/&gt;&quot;;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">hi(); </span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// вывод значения по умолчанию</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">hi(&quot;Петр&quot;);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">?&gt;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Результат:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Привет, Вася!</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Привет, Петр!</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">При присваивании значений по умолчанию следует помнить о двух важных обстоятельствах:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">1. Все параметры со значениями по умолчанию должны перечисляться после параметров, не имеющих значений по умолчанию: </span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function hi($text, $name=&quot;Вася&quot;)</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">2. Присваиваемое значение по умолчанию должно быть константой, строкой или числом. Оно не может быть переменной. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">3. Если по умолчанию переменная не должна содержать ничего, можно присвоить параметру пустую строку: </span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function hi($name = &#39;&#39;&quot;)</span></span></span><span style=\"font-size:14.0pt\"><span style=\"color:black\">.</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Возвращение значений функцией, оператор Return</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Функция может не только выполнять какие-то конкретные действия, выводя их значения на экран, она также может просто возвращать в программу какие-то вычисленные значения.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Внутри такой функции используется оператор возврата <em>return</em>, после которого указывается возвращаемое значение (или переменная, массив, выражение и т.п.)</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Вызов такой функции осуществляется либо через присваивание переменной, либо сразу через вывод на экран.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Пример: описать функцию с двумя аргументами, возвращающую сумму данных аргументов.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Решение</span></span><span style=\"font-size:14.0pt\"><span style=\"color:black\">:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function sum($a, $b) {</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp; return $a + $b;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// 1 </span></span></span><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">вариант</span></span></span> <span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">вызова</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">echo sum(1, 2) ;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:darkgreen\">// 2 вариант вызова</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">$x=sum(1, 2);</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">echo $x;</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Область видимости переменной</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><em><span style=\"font-size:14.0pt\"><span style=\"color:black\">Локальные переменные</span></span></em><span style=\"font-size:14.0pt\"><span style=\"color:black\"> &ndash; переменные, определенные внутри пользовательской функции. Они доступны только внутри функции, в которой они определены. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Все объявленные и используемые в функции переменные по умолчанию локальны для функции.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><em><span style=\"font-size:14.0pt\"><span style=\"color:black\">Глобальные переменные</span></span></em><span style=\"font-size:14.0pt\"><span style=\"color:black\"> &ndash; это переменные, которые доступны всей программе, включая пользовательские функции.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Чтобы получить значение переменной за пределами функции, нужно объявить эту переменную внутри функции следующим образом: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:firebrick\">global $переменная; </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Например: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">$d=10; </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">function test(){</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">global $d; </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">echo $d; // отобразит в окне браузера строку &quot;10&quot; </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">}</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">test(); </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:13.0pt\"><span style=\"font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;\"><span style=\"color:black\">echo $d; // отобразит в окне браузера строку &quot;10&quot; </span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Конструкции включений в PHP</span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Конструкции включений позволяют собирать PHP программу (скрипт) из нескольких отдельных файлов.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Функции</span></span><span style=\"font-size:14.0pt\"><span style=\"color:black\">:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; require;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include_once;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; require_once.</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Конструкция включений <em>include</em></span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Предназначена для включения файлов в код сценария PHP во время выполнения сценария. </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Синтаксис:</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">include <em>имя_файла;</em></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Пример.</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;<span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;?php</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">for($i=1; $i&lt;=5; $i++) </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">{</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">include &quot;text/f.php&quot;;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">}</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">?&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><strong><span style=\"font-size:14.0pt\"><span style=\"color:black\">Конструкция включений <em>require</em></span></span></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Конструкция require позволяет включать файлы в сценарий PHP до исполнения сценария PHP. Также разница в том, что require, не найдя указанный файл, выведет сообщение об ошибке и заставит сценарий прекратить работу, а include в этом случае выведет предупреждение, а сценарий продолжит работу.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Синтаксис: </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">require <em>имя_файла</em>;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Конструкция require позволяет собирать сценарии PHP из нескольких отдельных файлов, которые могут быть как html-страницами, так и php-скриптами. Конструкция require поддерживает включения удаленных файлов.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Пример.</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Файл <strong>header.html:</strong></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;html&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;head&gt; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;title&gt; Интернет-магазин канцтоваров&lt;/title&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;/head&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;body bgcolor=green&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;h1&gt;Интернет-магазин &quot;Канцтовары&quot;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/h1&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;img&nbsp; src=&quot;1.png&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;/body&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;/html&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Файл</span></span><span style=\"font-size:14.0pt\"><span style=\"color:black\"> <strong>script.php</strong></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">&lt;?php&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">require &quot;header.html&quot;;</span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">?&gt;</span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:14.0pt\"><span style=\"color:black\">Операторы <em>include_once</em> и <em>require_once</em> включают и исполняют указанные файлы так же, как и операторы require и include. Различие состоит в том, что код, который уже был подключен, не будет подключаться повторно.</span></span></p>\r\n', 2),
(31, 'GET и POST', '<p>При отправке данных с формы на сервер по методу GET содержимое формы добавляется в адресной строке браузера к URL программы, принимающей эти данные, в следующем виде:</p>\r\n\r\n<p>http://action.php?name1=value1&amp;name2=value2&amp;name3=value3</p>\r\n\r\n<p>&Oslash;Здесь action.php &mdash; это URL-адрес программы, которая должна обрабатывать форму. Обычно это программа, заданная в атрибуте action тега form. Имена name1, name2, name3 соответствуют именам элементов формы, а value1, value2, value3 &mdash; значениям этих элементов.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>－существует ограничение на количество посылаемых символов;</p>\r\n\r\n<p>－данные плохо защищены от постороннего взгляда.</p>\r\n', 2),
(33, 'На заметку, когда пишешь код!', '<p>Очень часто PHP-разработчики сталкиваются с такой проблемой: обрезав строку по длине, в конце строки появляется символ &quot;????&quot;. Это происходит из-за того, что строка хранится в кодировке юникода (как правило - utf-8), а функция substr работает только с &quot;однобайтными&quot; кодировками.</p>\r\n', 1),
(34, 'Просмотр отдельной статьи', '<p>Чтобы пользователь мог переходить к просмотру статьи мы реализовали ссылки на них. Все ссылки будут вести на один шаблон page.php и в нем будет GET-запрос, содержащий номер статьи. Например ссылка на первую статью должна быть такой:<br />\r\n<br />\r\nОднако нам необходимо получать id статей и тексты ссылок из базы данных. Исходя из этого наш скрипт будет формировать ссылки следующим образом:</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<p>&lt;a href=&quot;page.php?id=&lt;?php echo $post[&quot;id&quot;]; ?&gt;&quot;&gt;&lt;?php echo $post [&quot;title&quot;]; ?&gt;&lt;/a&gt;</p>\r\n</div>\r\n\r\n<p>Для получения содержания отдельной статьи внутри файла db.php создадим пользовательскую функцию get_post_by_id c SQL-запросом, где в качестве параметра будет переменная $id соответствующая полю id в базе данных. Кроме того, функция будет осуществлять переборку двумерного массива и возвращать результат в виде одномерного массива, содержащего данные каждой статьи. Перед закрывающимся дескриптором ?&gt; вставим следующий код:</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<p><code>// Получение статьи по ее id function get_post_by_id($id) { global $pdo; $posts = $pdo-&gt;query(&quot;SELECT * FROM posts WHERE id = $id&quot;); foreach ($posts as $post); return $post; }</code></p>\r\n</div>\r\n', 3),
(35, 'Характеристика PHP', '<p>PHP является языком программирования с динамической типизацией, не требующим указания типа при объявлении переменных, равно как и самого объявления переменных.&nbsp;<br />\r\nК скалярным типам данных относятся:&nbsp;<br />\r\nцелочисленный тип (int)&nbsp;<br />\r\nчисло с плавающей точкой (float)&nbsp;<br />\r\nлогический тип (bool)&nbsp;<br />\r\nстроковый тип (string)<br />\r\nК нескалярным типам относятся:&nbsp;<br />\r\nмассив (array)&nbsp;<br />\r\nобъект (object)&nbsp;<br />\r\nвнешний ресурс (resource)&nbsp;<br />\r\nнеопределённое значение (null)</p>\r\n\r\n<p><br />\r\nДиапазон целых чисел (int) в PHP зависит от платформы (для 32-битной архитектуры диапазон числа не превышает int32_t, то есть, от &minus;2&nbsp;147&nbsp;483&nbsp;648 до 2&nbsp;147&nbsp;483&nbsp;647). Числа можно задавать в десятичной, восьмеричной и шестнадцатеричной системах счисления. Диапазон вещественных чисел (float) также зависит от платформы (для 32-битной архитектуры диапазон позволяет оперировать числами от &plusmn;1.7&times;10&minus;308 до &plusmn;1.7&times;10+308).&nbsp;<br />\r\nPHP предоставляет разработчикам логический тип (bool), способный принимать только два значения true (&laquo;истина&raquo;) и false (&laquo;ложь&raquo;). При преобразовании в логический тип число 0, пустая строка, ноль в строке &laquo;0&raquo;, null и пустой массив считаются равными false. Все остальные значения автоматически преобразуются в true.&nbsp;<br />\r\nСпециальный тип null предназначен для переменных без определённого значения. Единственным значением данного типа является литерал null. Тип null принимают неинициализированные переменные, переменные инициализированные константой null, а также переменные, удалённые при помощи конструкции unset().&nbsp;<br />\r\nСсылки на внешние ресурсы имеют тип &laquo;ресурс&raquo; (resource). Переменные данного типа, как правило, представляют собой дескриптор, позволяющий управлять внешними объектами, такими как файлы, динамические изображения, результирующие таблицы базы данных и&nbsp;т.&nbsp;п. По мере развития языка стандартная библиотека постепенно дорабатывается и ресурсы заменяются объектами. Таким образом планируется полностью избавиться от этого типа.&nbsp;<br />\r\nМассивы (array) поддерживают числовые и строковые ключи и являются гетерогенными. Массивы могут содержать значения любых типов, включая другие массивы. Порядок элементов и их ключей сохраняется. Не совсем корректно называть php-массивы массивами, на самом деле это, скорее всего, упорядоченный хеш. Возможно неожиданное поведение при использовании цикла for со счётчиком вместо foreach. Так, например, при сортировке массива с численными индексами функциями из стандартной библиотеки, сортируются и ключи тоже.&nbsp;<br />\r\n&nbsp;</p>\r\n', 3);

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `login` text NOT NULL,
  `password` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `login`, `password`) VALUES
(1, 'admin', 'admin'),
(2, 'andrey', '111');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=36;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
